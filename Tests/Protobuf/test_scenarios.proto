// Copyright 2019, Vy-Shane Xie
// Licensed under the Apache License, Version 2.0
//
// Scenarios for end to end tests.

syntax = "proto3";

service UnaryScenarios {
  rpc UnaryOk (EchoRequest) returns (EchoResponse);
  rpc UnaryFailedPrecondition (EchoRequest) returns (Empty);
  rpc UnaryNoResponse (EchoRequest) returns (Empty);
}

service ClientStreamingScenarios {
  rpc ClientStreamOk (stream EchoRequest) returns (EchoResponse);
  rpc ClientStreamFailedPrecondition (stream EchoRequest) returns (Empty);
  rpc ClientStreamNoResponse (stream EchoRequest) returns (Empty);
}

service ServerStreamingScenarios {
  rpc ServerStreamOk (EchoRequest) returns (stream EchoResponse);
  rpc ServerStreamFailedPrecondition (EchoRequest) returns (stream Empty);
  rpc ServerStreamNoResponse (EchoRequest) returns (stream Empty);
}

service BidirectionalStreamingScenarios {
  rpc BidirectionalStreamOk (stream EchoRequest) returns (stream EchoResponse);
  rpc BidirectionalStreamFailedPrecondition (stream EchoRequest) returns (stream Empty);
  rpc BidirectionalStreamNoResponse (stream EchoRequest) returns (stream Empty);
}

service RetryScenarios {
  rpc FailThenSucceed (FailThenSucceedRequest) returns (Empty);
}

message EchoRequest {
  string message = 1;
}

message EchoResponse {
  string message = 1;
}

message Empty {}

message FailThenSucceedRequest {
  uint32 num_failures = 1;
}